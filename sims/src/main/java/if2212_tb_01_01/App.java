/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package if2212_tb_01_01;
import java.util.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import if2212_tb_01_01.entities.*;
import if2212_tb_01_01.objects.*;
import if2212_tb_01_01.utils.*;

public class App{
    class MainMenu {
        public MainMenu() {
        }
        public void show(boolean started) {
            if(!started){
                System.out.println("+---------------+");
                System.out.println("| List Menu :   |");
                System.out.println("| 1. Start Game |");
                System.out.println("| 2. Load Game  |");
                System.out.println("| 3. Help       |");
                System.out.println("| 4. Exit       |");
                System.out.println("+---------------+\n");

            }
            else{
                System.out.println("+--------------------------+");
                System.out.println("| List Menu :              |");
                System.out.println("| 1. Save Game             |");
                System.out.println("| 2. View Sim Info         |");
                System.out.println("| 3. View Current Location |");
                System.out.println("| 4. View Inventory        |");
                System.out.println("| 5. Upgrade House         |");
                System.out.println("| 6. Move Room             |");
                System.out.println("| 7. Edit Room             |");
                System.out.println("| 8. Add Sim               |");
                System.out.println("| 9. Change Sim            |");
                System.out.println("| 10. List Object          |");
                System.out.println("| 11. Go To Object         |");
                System.out.println("| 12. Action               |");
                System.out.println("| 13. Exit                 |");
                System.out.println("+--------------------------+");
            }
        }

    }
    private static volatile boolean running = true;
    private static ExecutorService executorService = Executors.newFixedThreadPool(20);
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        App app = new App();
        MainMenu mainMenu = app.new MainMenu();
        boolean startgame = false;
        boolean loadgame = false;
        boolean endedgame = false;
        boolean isCanAddSim = true;
        List<Sim> listSim = new ArrayList<Sim>();
        String command;
        World world = new World(64,64);
        Integer indeksActiveSim = 0;
        System.out.println("Selamat datang di Sim-Plicity!");
        while(!startgame && !loadgame && !endedgame){
            mainMenu.show(startgame);
            System.out.print("Masukkan command: ");
            command = scanner.nextLine();
            command.toUpperCase();
            
            //validasi command
            if (command.equals("START GAME")){
                startgame = true;
            }
            else if(command.equals("LOAD GAME")){
                loadgame = true;
            }

            else if (command.equals("EXIT")){
                endedgame = true;
                System.out.println("Sampai jumpa kembali! \n");
            }
            else if(command.equals("HELP")){
                System.out.println("GAME K*NT*L!!");
            }
            else{
                System.out.println("Command tidak valid!! \n");
            }
        }

        if(startgame){
            //memuat world
            System.out.println("\nMemuat World....");
            Point posisiRuangan = new Point(-1,-1);
            Point posisiRumah = new Point(-1,-1);

            //Meminta nama sim
            System.out.print("Silakan masukkan nama lengkap: ");
            String name = scanner.nextLine();

            //Memuat rumah
            while(posisiRumah.isPointEqual(-1, -1)){
                System.out.print("Masukkan lokasi rumah yang diinginkan dengan format x,y : ");
                command = scanner.nextLine();
                posisiRumah = Point.makePoint(command);
                if(posisiRumah.isPointEqual(-1, -1)){
                    System.out.println("Input tidak valid!\n");
                }
            }

            //Memuat Ruangan
            System.out.print("Masukkan nama ruangan: ");
            String namaRuangan = scanner.nextLine();
            while(posisiRuangan.isPointEqual(-1, -1)){
                System.out.print("Masukkan lokasi ruangan yang diinginkan dengan format x,y : ");
                command = scanner.nextLine();
                posisiRuangan = Point.makePoint(command);
                if(posisiRuangan.isPointEqual(-1, -1)){
                    System.out.println("Input tidak valid!\n");
                }
            }

            //world.printMapWorld();
            System.out.println("\nMemuat Rumah....");
            world.addRumah(new Point(posisiRumah),name,namaRuangan,new Point(posisiRuangan));
            

            //Memuat Ruangan
            world.getRumah(name).getRuangan(namaRuangan).printMapRuangan();

            //Memuat Sim
            listSim.add(new Sim(new Kesejahteraan(80,80,80,80), 100, name, world.getLastRumah(), world.getLastRumah().getPosisi(), world.getLastRumah().getDaftarRuangan().get(0).getPosisi()));
            indeksActiveSim = listSim.size() - 1;
            System.out.println("Selamat datang, " + name + "!");
            posisiRumah.setPoint(-1, -1);
            posisiRuangan.setPoint(-1, -1);

            // memulai thread counter waktu

        }

        while(!endedgame){
            mainMenu.show(startgame);
            System.out.print("Masukkan command: ");
            command = scanner.nextLine().toUpperCase();

            //Menu nomor 2
            if(command.equals("VIEW SIM INFO")){
                listSim.get(indeksActiveSim).viewInfo();
            }

            //Menu nomor 3
            else if(command.equals("VIEW CURRENT LOCATION")){
                Rumah currentLocationRumah = world.getRumah(listSim.get(indeksActiveSim).getPosisiRumah());
                listSim.get(indeksActiveSim).viewLokasi(currentLocationRumah);
            }

            //Menu nomor 4
            else if (command.equals("VIEW INVENTORY")){
                listSim.get(indeksActiveSim).viewInventory();
            }

            // Menu nomor 5 
            else if (command.equals("UPGRADE HOUSE")){
                final int activeSimIndex = indeksActiveSim;
                executorService.execute(new Runnable() {
                    @Override
                    public void run() {
                        listSim.get(activeSimIndex).upgradeRumah();
                    }
                });
            }

            else if (command.equals("MOVE ROOM")){
                System.out.println("Daftar ruangan yang dapat dipilih:");
                for (int i = 0; i < listSim.get(indeksActiveSim).getRumah().getDaftarRuangan().size(); i++){
                    System.out.println((i+1) + ". " + listSim.get(indeksActiveSim).getRumah().getDaftarRuangan().get(i).getNama());
                }
                System.out.print("Pilih nomor ruangan yang ingin dituju: ");
                int pilihan = scanner.nextInt();
                if (pilihan > 1 && pilihan <= listSim.get(indeksActiveSim).getRumah().getDaftarRuangan().size()){
                    listSim.get(indeksActiveSim).berpindahRuangan(listSim.get(indeksActiveSim).getRumah().getDaftarRuangan().get(pilihan-1));
                }
                else{
                    System.out.println("Input tidak valid!");
                }
            }

            //Menu nomor 7
            else if(command.equals("EDIT ROOM")){
                System.out.println("Opsi kegiatan yang dapat dilakukan:");
                System.out.println("1.Beli barang");
                System.out.println("2.Pemindahan barang");
                System.out.print("Pilih kegiatan yang ingin dilakukan: ");
                command = scanner.nextLine().toUpperCase();
                if(command.equals("BELI BARANG") || command.equals("PEMINDAHAN BARANG")){
                    String kegiatan = command;
                    if(kegiatan.equals("BELI BARANG")){
                        System.out.println("Kategori barang yang dapat dibeli:");
                        System.out.println("1.Makanan");
                        System.out.println("2.Furnitur");
                        System.out.print("Pilih kategori barang yang ingin dibeli: ");
                        command = scanner.nextLine().toUpperCase();
                        if(command.equals("MAKANAN") || command.equals("FURNITUR")){
                            String kategori = command;
                            if(kategori.equals("MAKANAN")){
                                Makanan.printListMakanan();
                                System.out.println("Pilih makanan yang ingin dibeli: ");
                            }
                            else if(kategori.equals("FURNITUR")){
                                Furnitur.printListFurnitur();
                                System.out.println("Pilih furnitur yang ingin dibeli: ");
                            }
                            command = scanner.nextLine().toUpperCase();
                            listSim.get(indeksActiveSim).beliBarang(command, kategori);
                        }
                        else{
                            System.out.println("input kategori tidak valid!");
                        }
                    }
                    else if(kegiatan.equals("PEMINDAHAN BARANG")){

                    }
                }
                else{
                    System.out.println("Input kegiatan tidak valid!\n");
                }
            }

            // Menu nomor 8
            else if(command.equals("ADD SIM")){
                if (isCanAddSim){
                    //Meminta nama sim
                    System.out.print("Silakan masukkan nama lengkap: ");
                    String name = scanner.nextLine();
                    Point posisiRuanganBaru = new Point(-1,-1);
                    Point posisiRumahBaru = new Point(-1,-1);
                    //Memuat rumah
                    while(posisiRumahBaru.isPointEqual(-1, -1)){
                        System.out.print("Masukkan lokasi rumah yang diinginkan dengan format x,y : ");
                        command = scanner.nextLine();
                        posisiRumahBaru = Point.makePoint(command);
                        if(posisiRumahBaru.isPointEqual(-1, -1)){
                            System.out.println("Input tidak valid!\n");
                        }
                    }
                    //Memuat Ruangan
                    System.out.print("Masukkan nama ruangan: ");
                    String namaRuangan = scanner.nextLine();
                    while(posisiRuanganBaru.isPointEqual(-1, -1)){
                        System.out.print("Masukkan lokasi ruangan yang diinginkan dengan format x,y : ");
                        command = scanner.nextLine();
                        posisiRuanganBaru = Point.makePoint(command);
                        if(posisiRuanganBaru.isPointEqual(-1, -1)){
                            System.out.println("Input tidak valid!\n");
                        }
                    }
                    System.out.println("\nMemuat Rumah....");
                    world.addRumah(new Point(posisiRumahBaru),name,namaRuangan,new Point(posisiRuanganBaru));
                    //Memuat Ruangan
                    world.getRumah(name).getRuangan(namaRuangan).printMapRuangan();

                    //Memuat Sim
                    listSim.add(new Sim(new Kesejahteraan(80,80,80,80), 100, name, world.getLastRumah(), world.getLastRumah().getPosisi(), world.getLastRumah().getDaftarRuangan().get(0).getPosisi()));
                }
                        
            }
            else if (command.equals("CHANGE SIM")){
                if (listSim.size() > 1){
                    System.out.println("Daftar Sim yang dapat dipilih:");
                    for (int i = 0; i < listSim.size(); i++){
                        System.out.println((i+1) + ". " + listSim.get(i).getNamaLengkap());
                    }
                    System.out.print("Pilih nomor Sim yang ingin dipilih: ");
                    int pilihan = scanner.nextInt();
                    if (pilihan > 1 && pilihan <= listSim.size()){
                        indeksActiveSim = pilihan-1;
                    }
                    else{
                        System.out.println("Input tidak valid!");
                    }
                }
                else{
                    System.out.println("Tidak ada Sim lain yang dapat dipilih!");
                }
            } else if (command.equals("LIST OBJECT")){
                System.out.println("Berikut adalah daftar objek yang ada di ruanganmu:");
                int i=1;
                for (Furnitur furnitur : listSim.get(indeksActiveSim).getCurrentRuangan().getDaftarObjek()){
                    System.out.println(i + ". " + furnitur.getNama());
                    i+=1;
                }
            } else if (command.equals("GO TO OBJECT")){
                listSim.get(indeksActiveSim).goToObject();
            } else if (command.equals("ACTION")){
                System.out.println("\nBerikut adalah daftar aksi yang bisa kamu lakukan: ");
                System.out.println("1. Kerja");
                System.out.println("2. Olahraga");
                System.out.println("3. Berkunjung");
                System.out.println("4. Yoga");
                System.out.println("5. Berdoa");
                System.out.println("6. Melihat inventory");
                System.out.println("7. Beli barang\n");
                System.out.print("Pilih nomor aksi yang ingin dilakukan: ");
                command = scanner.nextLine().toUpperCase();
                if (command.equals("KERJA")){
                    listSim.get(indeksActiveSim).kerja();
                } else if (command.equals("OLAHRAGA")){
                    listSim.get(indeksActiveSim).olahraga();
                } else if (command.equals("BERKUNJUNG")){
                    listSim.get(indeksActiveSim).berkunjung();
                } else if (command.equals("YOGA")){
                    listSim.get(indeksActiveSim).yoga();
                } else if (command.equals("BERDOA")){
                    listSim.get(indeksActiveSim).berdoa();
                } else if (command.equals("MELIHAT INVENTORY")){
                    listSim.get(indeksActiveSim).viewInventory();
                } else if (command.equals("BELI BARANG")){
                    System.out.println("Kategori barang yang dapat dibeli:");
                    System.out.println("1.Makanan");
                    System.out.println("2.Furnitur");
                    System.out.print("Pilih kategori barang yang ingin dibeli: ");
                    command = scanner.nextLine().toUpperCase();
                    if(command.equals("MAKANAN") || command.equals("FURNITUR")){
                        String kategori = command;
                        if(kategori.equals("MAKANAN")){
                            Makanan.printListMakanan();
                            System.out.println("Pilih makanan yang ingin dibeli: ");
                        }
                        else if(kategori.equals("FURNITUR")){
                            Furnitur.printListFurnitur();
                            System.out.println("Pilih furnitur yang ingin dibeli: ");
                        }
                        command = scanner.nextLine().toUpperCase();
                        listSim.get(indeksActiveSim).beliBarang(command, kategori);
                    }
                } 
            } else if (command.equals("EXIT")){
                endedgame = true;
                System.out.println("Sampai jumpa kembali! \n");
            }
        }
        scanner.close();
    }   
}
